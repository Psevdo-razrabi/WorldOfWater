//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cae58450-f15a-44a3-a5a2-78146f42c9ba"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""4cb48657-db21-4529-87fa-535ae6bbef51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fd0b1a6a-b0ec-4cb4-9626-04116c717bc6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeItem"",
                    ""type"": ""Button"",
                    ""id"": ""691ae0cf-0d67-48de-a343-2cc0cf12a3ae"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""aafc70d2-6f22-4a4c-be06-f27ff98319db"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""44237abb-ca5c-425d-a273-0689f8dc1a64"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e6dbf359-9ee0-4a45-9f9a-ac126dccd84d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""08442238-2511-4554-8595-ee12f3c57c53"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7a3a99bb-0d67-47fd-bb83-a32befd79796"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""59948812-192f-4450-ad7b-0d1fc718c5e8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5b80c88b-0309-44da-8320-f70def2d4a69"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0af04c1b-cedd-4031-a29d-50fb422157bc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fb39dee-01c4-4fca-a198-a0080b606fa6"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ui"",
            ""id"": ""78fd637d-70d4-48b1-be03-59a73aea15ec"",
            ""actions"": [
                {
                    ""name"": ""DropItem"",
                    ""type"": ""Button"",
                    ""id"": ""b7d9c8d6-83d3-472a-a4a4-2d95dec03b6e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""f4cd2f51-33b1-40d6-89af-ec27848a3aef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""76d70cf5-5e80-4f92-bf40-5faf9d1df4a4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""f3a7e2c9-c137-41da-879f-5b94d3d5f19b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FourthSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""321ee1b1-c5d7-41ca-87a3-1200dda66acb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FifthSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""2a7eb71a-4f72-4971-8ba4-ef00855dce34"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SixthSlotQuickBar"",
                    ""type"": ""Button"",
                    ""id"": ""36306569-b12e-4ca6-bbbd-c216dc3d0736"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0226c464-2bc8-4a13-81d7-6d37b02aefa9"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce8f72be-fdb8-491c-9afa-178e09e11327"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26918df4-88c7-45f2-a486-e5c9e596e511"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00ff9f65-f396-47d2-830f-ba238d6b930a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1f66164-be43-4bfb-8587-764a65b367d6"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FourthSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""020a2080-be1a-407e-add1-6d5b8e70fc45"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FifthSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f34db6d-def4-440f-90cc-65e9a9312e0f"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SixthSlotQuickBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_TakeItem = m_Player.FindAction("TakeItem", throwIfNotFound: true);
        m_Player_OpenInventory = m_Player.FindAction("OpenInventory", throwIfNotFound: true);
        // Ui
        m_Ui = asset.FindActionMap("Ui", throwIfNotFound: true);
        m_Ui_DropItem = m_Ui.FindAction("DropItem", throwIfNotFound: true);
        m_Ui_FirstSlotQuickBar = m_Ui.FindAction("FirstSlotQuickBar", throwIfNotFound: true);
        m_Ui_SecondSlotQuickBar = m_Ui.FindAction("SecondSlotQuickBar", throwIfNotFound: true);
        m_Ui_ThirdSlotQuickBar = m_Ui.FindAction("ThirdSlotQuickBar", throwIfNotFound: true);
        m_Ui_FourthSlotQuickBar = m_Ui.FindAction("FourthSlotQuickBar", throwIfNotFound: true);
        m_Ui_FifthSlotQuickBar = m_Ui.FindAction("FifthSlotQuickBar", throwIfNotFound: true);
        m_Ui_SixthSlotQuickBar = m_Ui.FindAction("SixthSlotQuickBar", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerInput.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Ui.enabled, "This will cause a leak and performance issues, PlayerInput.Ui.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_TakeItem;
    private readonly InputAction m_Player_OpenInventory;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @TakeItem => m_Wrapper.m_Player_TakeItem;
        public InputAction @OpenInventory => m_Wrapper.m_Player_OpenInventory;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @TakeItem.started += instance.OnTakeItem;
            @TakeItem.performed += instance.OnTakeItem;
            @TakeItem.canceled += instance.OnTakeItem;
            @OpenInventory.started += instance.OnOpenInventory;
            @OpenInventory.performed += instance.OnOpenInventory;
            @OpenInventory.canceled += instance.OnOpenInventory;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @TakeItem.started -= instance.OnTakeItem;
            @TakeItem.performed -= instance.OnTakeItem;
            @TakeItem.canceled -= instance.OnTakeItem;
            @OpenInventory.started -= instance.OnOpenInventory;
            @OpenInventory.performed -= instance.OnOpenInventory;
            @OpenInventory.canceled -= instance.OnOpenInventory;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Ui
    private readonly InputActionMap m_Ui;
    private List<IUiActions> m_UiActionsCallbackInterfaces = new List<IUiActions>();
    private readonly InputAction m_Ui_DropItem;
    private readonly InputAction m_Ui_FirstSlotQuickBar;
    private readonly InputAction m_Ui_SecondSlotQuickBar;
    private readonly InputAction m_Ui_ThirdSlotQuickBar;
    private readonly InputAction m_Ui_FourthSlotQuickBar;
    private readonly InputAction m_Ui_FifthSlotQuickBar;
    private readonly InputAction m_Ui_SixthSlotQuickBar;
    public struct UiActions
    {
        private @PlayerInput m_Wrapper;
        public UiActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @DropItem => m_Wrapper.m_Ui_DropItem;
        public InputAction @FirstSlotQuickBar => m_Wrapper.m_Ui_FirstSlotQuickBar;
        public InputAction @SecondSlotQuickBar => m_Wrapper.m_Ui_SecondSlotQuickBar;
        public InputAction @ThirdSlotQuickBar => m_Wrapper.m_Ui_ThirdSlotQuickBar;
        public InputAction @FourthSlotQuickBar => m_Wrapper.m_Ui_FourthSlotQuickBar;
        public InputAction @FifthSlotQuickBar => m_Wrapper.m_Ui_FifthSlotQuickBar;
        public InputAction @SixthSlotQuickBar => m_Wrapper.m_Ui_SixthSlotQuickBar;
        public InputActionMap Get() { return m_Wrapper.m_Ui; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UiActions set) { return set.Get(); }
        public void AddCallbacks(IUiActions instance)
        {
            if (instance == null || m_Wrapper.m_UiActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UiActionsCallbackInterfaces.Add(instance);
            @DropItem.started += instance.OnDropItem;
            @DropItem.performed += instance.OnDropItem;
            @DropItem.canceled += instance.OnDropItem;
            @FirstSlotQuickBar.started += instance.OnFirstSlotQuickBar;
            @FirstSlotQuickBar.performed += instance.OnFirstSlotQuickBar;
            @FirstSlotQuickBar.canceled += instance.OnFirstSlotQuickBar;
            @SecondSlotQuickBar.started += instance.OnSecondSlotQuickBar;
            @SecondSlotQuickBar.performed += instance.OnSecondSlotQuickBar;
            @SecondSlotQuickBar.canceled += instance.OnSecondSlotQuickBar;
            @ThirdSlotQuickBar.started += instance.OnThirdSlotQuickBar;
            @ThirdSlotQuickBar.performed += instance.OnThirdSlotQuickBar;
            @ThirdSlotQuickBar.canceled += instance.OnThirdSlotQuickBar;
            @FourthSlotQuickBar.started += instance.OnFourthSlotQuickBar;
            @FourthSlotQuickBar.performed += instance.OnFourthSlotQuickBar;
            @FourthSlotQuickBar.canceled += instance.OnFourthSlotQuickBar;
            @FifthSlotQuickBar.started += instance.OnFifthSlotQuickBar;
            @FifthSlotQuickBar.performed += instance.OnFifthSlotQuickBar;
            @FifthSlotQuickBar.canceled += instance.OnFifthSlotQuickBar;
            @SixthSlotQuickBar.started += instance.OnSixthSlotQuickBar;
            @SixthSlotQuickBar.performed += instance.OnSixthSlotQuickBar;
            @SixthSlotQuickBar.canceled += instance.OnSixthSlotQuickBar;
        }

        private void UnregisterCallbacks(IUiActions instance)
        {
            @DropItem.started -= instance.OnDropItem;
            @DropItem.performed -= instance.OnDropItem;
            @DropItem.canceled -= instance.OnDropItem;
            @FirstSlotQuickBar.started -= instance.OnFirstSlotQuickBar;
            @FirstSlotQuickBar.performed -= instance.OnFirstSlotQuickBar;
            @FirstSlotQuickBar.canceled -= instance.OnFirstSlotQuickBar;
            @SecondSlotQuickBar.started -= instance.OnSecondSlotQuickBar;
            @SecondSlotQuickBar.performed -= instance.OnSecondSlotQuickBar;
            @SecondSlotQuickBar.canceled -= instance.OnSecondSlotQuickBar;
            @ThirdSlotQuickBar.started -= instance.OnThirdSlotQuickBar;
            @ThirdSlotQuickBar.performed -= instance.OnThirdSlotQuickBar;
            @ThirdSlotQuickBar.canceled -= instance.OnThirdSlotQuickBar;
            @FourthSlotQuickBar.started -= instance.OnFourthSlotQuickBar;
            @FourthSlotQuickBar.performed -= instance.OnFourthSlotQuickBar;
            @FourthSlotQuickBar.canceled -= instance.OnFourthSlotQuickBar;
            @FifthSlotQuickBar.started -= instance.OnFifthSlotQuickBar;
            @FifthSlotQuickBar.performed -= instance.OnFifthSlotQuickBar;
            @FifthSlotQuickBar.canceled -= instance.OnFifthSlotQuickBar;
            @SixthSlotQuickBar.started -= instance.OnSixthSlotQuickBar;
            @SixthSlotQuickBar.performed -= instance.OnSixthSlotQuickBar;
            @SixthSlotQuickBar.canceled -= instance.OnSixthSlotQuickBar;
        }

        public void RemoveCallbacks(IUiActions instance)
        {
            if (m_Wrapper.m_UiActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUiActions instance)
        {
            foreach (var item in m_Wrapper.m_UiActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UiActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UiActions @Ui => new UiActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnTakeItem(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
    }
    public interface IUiActions
    {
        void OnDropItem(InputAction.CallbackContext context);
        void OnFirstSlotQuickBar(InputAction.CallbackContext context);
        void OnSecondSlotQuickBar(InputAction.CallbackContext context);
        void OnThirdSlotQuickBar(InputAction.CallbackContext context);
        void OnFourthSlotQuickBar(InputAction.CallbackContext context);
        void OnFifthSlotQuickBar(InputAction.CallbackContext context);
        void OnSixthSlotQuickBar(InputAction.CallbackContext context);
    }
}
